# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

###############################################################################
# Begin region of variables to edit...
###############################################################################

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
PROJECT_NAME = myProjectTests 
PROJECT_HOME = ..
##########################
# Directories
##########################
# Where to find user code.
# The code BEING tested...
SRC_DIR = $(PROJECT_HOME)/src
# Where the tests are...
TEST_SRC_DIR = .

# Where are we dumping our build files?
TEST_BUILD_DIR = build
# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = $(PROJECT_HOME)/.googletest/googletest

##########################
# Specific Source files
##########################
TESTS = $(TEST_SRC_DIR)/wordlistTest.cc 

SRCS = 	$(SRC_DIR)/wordlist.cpp

SRC_INCLUDES = -I$(PROJECT_HOME)/include
TEST_OBJS = $(TESTS:$(TEST_SRC_DIR)/%.cc=$(TEST_BUILD_DIR)/%-testobj.o)
SRC_OBJS = $(SRCS:$(SRC_DIR)/%.cpp=$(TEST_BUILD_DIR)/%-srcobj.o)

CXX = g++

###############################################################################
# Most likely don't need to edit anything below this line...
###############################################################################
.PHONY: \
	all \
	debug \
	clean \
	cleanall \
	googletest 

.PRECIOUS: \
	%.cc


# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread -std=c++11 

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h
###############################################################################
# House-keeping build targets.
###############################################################################

all : \
	$(PROJECT_NAME);

clean :
	rm -rf $(PROJECT_NAME) gtest.a gtest_main.a *.o *.dSYM build

cleanall : clean
	rm -rf ../.googletest 

debug :
	@echo TEST_OBJS: $(TEST_OBJS)
	@echo SRC_OBJS: $(SRC_OBJS)
	@echo GTEST_DIR: $(GTEST_DIR)
	@echo TEST_D: $(TEST_OBJS:.o=.d)

googletest: 
	./installGoogleTest.sh

###############################################################################
# Build Google Test Library
###############################################################################

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
$(TEST_BUILD_DIR)/gtest-all.o : $(GTEST_SRCS_) 
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc -o $@

$(TEST_BUILD_DIR)/gtest_main.o : $(GTEST_SRCS_) 
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc -o $@

$(TEST_BUILD_DIR)/gtest.a : $(TEST_BUILD_DIR)/gtest-all.o 
	$(AR) $(ARFLAGS) $@ $^

$(TEST_BUILD_DIR)/gtest_main.a : $(TEST_BUILD_DIR)/gtest-all.o $(TEST_BUILD_DIR)/gtest_main.o 
	$(AR) $(ARFLAGS) $@ $^

$(GTEST_DIR)/%: googletest;

###############################################################################
# Build our Tests
###############################################################################

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.
$(PROJECT_NAME): $(SRC_OBJS) $(TEST_OBJS) $(TEST_BUILD_DIR)/gtest_main.a 
	@echo Building $@
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(SRC_INCLUDES) -lpthread $^ -o $@

$(TEST_BUILD_DIR)/%-srcobj.o: $(SRC_DIR)/%.cpp | build_dir
	@echo Building $@...
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(SRC_INCLUDES) -c $< -o $@

$(TEST_BUILD_DIR)/%-testobj.o: $(TEST_SRC_DIR)/%.cc | build_dir googletest
	@echo Building $@...
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(SRC_INCLUDES) -c $< -o $@

###############################################################################
# Autogen Dependencies 
###############################################################################
$(TEST_BUILD_DIR)/%-srcobj.d: $(SRC_DIR)/%.cpp | build_dir googletest
	@echo "Running Autogen Source Objects..."
	@set -e;\
		rm -f $@;\
		$(CXX) -MM $(CPPFLAGS) $(CXXFLAGS) $(SRC_INCLUDES) $< > $@.$$$$;\
		sed 's,\($*\)\.o[ :]*,$(TEST_BUILD_DIR)/\1.o $@ : ,g' < $@.$$$$ > $@; \
		rm -f $@.$$$$
	@echo "Finished Autogen Source Objects..."

$(TEST_BUILD_DIR)/%-testobj.d: $(TEST_SRC_DIR)/%.cc | build_dir googletest
	@echo "Running Autogen for Test Objects..."
	@set -e;\
		rm -f $@;\
		$(CXX) -MM $(CPPFLAGS) $(CXXFLAGS) $(SRC_INCLUDES) $< > $@.$$$$;\
		sed 's,\($*\)\.o[ :]*,$(TEST_BUILD_DIR)/\1.o $@ : ,g' < $@.$$$$ > $@; \
		rm -f $@.$$$$
	@echo "Finished Autogen Test Objects..."

include $(TEST_OBJS:.o=.d)
include $(SRC_OBJS:.o=.d)


build_dir:
	@echo Make build directory...
	@mkdir -p $(TEST_BUILD_DIR)

